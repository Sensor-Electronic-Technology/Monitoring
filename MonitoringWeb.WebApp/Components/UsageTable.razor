@using MonitoringWeb.WebApp.Data
@using MonitoringSystem.Shared.Data.UsageModel
@using MongoDB.Driver
@inject IMongoClient Client;
<h3>Usage Table</h3>
<DxGrid Data="@Records" AutoCollapseDetailRow="false" 
        AllowGroup="true" 
        ShowGroupPanel="true"
        CustomizeSummaryDisplayText="Grid_CustomizeSummaryDisplayText"
        PageSize="15"
        PagerPosition="GridPagerPosition.TopAndBottom"
        PageSizeSelectorVisible="true"
        PageSizeSelectorItems="@(new int[] { 5, 10, 15, 20 })"
        PageSizeSelectorAllRowsItemVisible="true"
        PagerSwitchToInputBoxButtonCount="10"
        PagerVisibleNumericButtonCount="10">
    <Columns>
        <DxGridDataColumn FieldName="Date" DisplayFormat="d" />
        <DxGridDataColumn FieldName="DayOfWeek"/>
        <DxGridDataColumn FieldName="DayOfMonth"/>
        <DxGridDataColumn FieldName="WeekOfYear" GroupIndex="2"/>
        <DxGridDataColumn FieldName="MonthName" Caption="Month" GroupIndex="1"/>
        <DxGridDataColumn FieldName="Year" GroupIndex="0"  DisplayFormat="D"/>
        <DxGridDataColumn FieldName="Usage"/>
        <DxGridDataColumn FieldName="PerHour"/>
    </Columns>
    <GroupSummary>
        <DxGridSummaryItem SummaryType="GridSummaryItemType.Avg" FieldName="Usage" Name="PerDay"/>
        <DxGridSummaryItem SummaryType="GridSummaryItemType.Sum" FieldName="Usage" Name="Usage"/>
    </GroupSummary>
</DxGrid>

<DxChart T="UsageDayRecord"
         Data="@Records"
         Width="100%">
    <DxChartTitle Text="Usage">
        <DxChartSubTitle Text="Usage" />
    </DxChartTitle>
    <DxChartLineSeries  Name="By Week"
                        T="UsageDayRecord"
                        TArgument="int"
                        TValue="double"
                        ArgumentField="pasi => pasi.WeekOfYear"
                        ValueField="pasi => pasi.Usage"
                        SummaryMethod="Enumerable.Sum" />
    <DxChartLegend Position="RelativePosition.Outside"
                   HorizontalAlignment="HorizontalAlignment.Center"
                   VerticalAlignment="VerticalEdge.Bottom" />
</DxChart>

@*<DxGrid Data="@Records" AutoCollapseDetailRow="false" AllowGroup="true" ShowGroupPanel="true">
    <Columns>
                <DxGridDataColumn FieldName="DayOfMonth" />
                <DxGridDataColumn FieldName="DayOfWeek" />
                <DxGridDataColumn FieldName="Consumption"/>
                <DxGridDataColumn FieldName="PerHour"/>
                <DxGridDataColumn FieldName="PerMin"/>
    </Columns>
    <DetailRowTemplate >
        @{
            var monthRecord = context.DataItem as MonthRecord;
        }
        <DxGrid Data="@monthRecord?.DayRecords" ShowGroupPanel="true">
            <Columns>
                <DxGridDataColumn FieldName="DayOfMonth" />
                <DxGridDataColumn FieldName="DayOfWeek" />
                <DxGridDataColumn FieldName="Consumption"/>
                <DxGridDataColumn FieldName="PerHour"/>
                <DxGridDataColumn FieldName="PerMin"/>
            </Columns>
        </DxGrid>
    </DetailRowTemplate>
</DxGrid>*@
@code {
    [Parameter]
    public BulkGasType GasType { get; set; }

    ChartAxisTickInterval interval;
    
    IEnumerable<UsageDayRecord>? Records { get; set; }
    
    void Grid_CustomizeSummaryDisplayText(GridCustomizeSummaryDisplayTextEventArgs e) {
        e.DisplayText = string.Format(e.Item.Name+": {0:N1}", e.Value);
    }

    protected override async Task OnInitializedAsync() {
        if (this.GasType == BulkGasType.NH3) {
            var database = this.Client.GetDatabase("nh3_data");
            var collection = database.GetCollection<UsageDayRecord>("usage_records");
            var record = await collection.Find(_ => true).ToListAsync();
            this.Records = record.AsEnumerable();
        }
    }

}