@using MonitoringSystem.Shared.Data.LogModel
@using MonitoringSystem.Shared.Services
@inject AmmoniaDataService AmmoniaDataService
@inject AmmoniaController AmmoniaController


@*<div class="card">
    <div class="card-header text-center py-1">
        <h5>Tank</h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="card">
                <div class="card-header text-center py-1">
                    <h5>Current Tank Settings</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @if (this._currentTank == null) {
                            <div class="bg-secondary text-white text-center" >
                                <h5 style="padding: .05rem">No Tank</h5>
                            </div>
                        } else {
                            @switch (this._currentTank?.TankState) {
                                case TankState.Consumed: {
                                    <div class="bg-danger text-white text-center">
                                        <h5 style="padding: .05rem">Consumed</h5>
                                    </div>
                                    break;
                                }
                                case TankState.InUse: {
                                    <div class="bg-success text-white text-center">
                                        <h5 style="padding: .05rem">Consuming</h5>
                                    </div>
                                    break;
                                }
                                case TankState.IdleOnScaleMeasured: {
                                    <div class="bg-info text-white text-center">
                                        <h5 style="padding: .05rem">Ready</h5>
                                    </div>
                                    break;
                                }
                                case TankState.IdleOnScaleNotMeasured: {
                                    <div class="bg-warning text-white text-center">
                                        <h5 style="padding: .05rem">Tank Measurement Needed</h5>
                                    </div>
                                    break;
                                }
                            }
                        }
                        
                    </div>
                    <div class="row justify-content-evenly py-1">
                        <div class="col">
                            <DxButton CssClass="w-100"
                                      RenderStyle="ButtonRenderStyle.Primary"
                                      Click="@this.AddNewTank"
                                      Text="Add New Tank"/>
                        </div>
                        <div class="col">
                            <DxButton CssClass="w-100"
                                      RenderStyle="ButtonRenderStyle.Danger"
                                      Click="this.ClearTank"
                                      Text="Clear Tank"/>
                        </div>
                        <div class="col">
                            <DxButton CssClass="w-100"
                                      RenderStyle="ButtonRenderStyle.Info"
                                      Click="@this.StartConsuming"
                                      Text="Start Consuming"/>
                        </div>
                    </div>
                    <div class="row" style="padding: .5rem">
                        <EditForm Model="@this._currentTank"
                                  OnSubmit="@this.OnSubmitHandler"
                                  Context="EditFormContext">
                            <DxFormLayout ReadOnly="@this._isReadOnly">
                                <DxFormLayoutItem Caption="Date Loaded">
                                    <DxDateEdit @bind-Date="@this.CurrentTank.StartDate"/>
                                </DxFormLayoutItem>
                                <DxFormLayoutGroup Caption="Raw Values" ColSpanMd="12" BeginRow="true">
                                    <DxFormLayoutItem Caption="Raw Zero" ColSpanSm="6">
                                        <DxSpinEdit @bind-Value="@this._currentCalibration.ZeroRawValue"/>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="Raw Non-Zero" ColSpanSm="6">
                                        <DxSpinEdit @bind-Value="@this._currentCalibration.NonZeroRawValue"/>
                                    </DxFormLayoutItem>
                                </DxFormLayoutGroup>
                                <DxFormLayoutGroup Caption="Real Values" ColSpanMd="12" BeginRow="true">
                                    <DxFormLayoutItem Caption="Actual Zero" ColSpanSm="6">
                                        <DxSpinEdit @bind-Value="@this._currentCalibration.ZeroValue"/>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem Caption="Actual Non-Zero" ColSpanSm="6">
                                        <DxSpinEdit @bind-Value="@this._currentCalibration.NonZeroValue"/>
                                    </DxFormLayoutItem>
                                </DxFormLayoutGroup>
                                <DxFormLayoutGroup ColSpanMd="12"
                                                   Visible="@(this._isReadOnly == false)"
                                                   BeginRow="true">
                                    <DxFormLayoutItem ColSpanMd="6">
                                        <DxButton CssClass="w-100"
                                                  RenderStyle="ButtonRenderStyle.Primary"
                                                  SubmitFormOnClick="true"
                                                  Text="Save Calibration"/>
                                    </DxFormLayoutItem>
                                    <DxFormLayoutItem ColSpanMd="6">
                                        <DxButton CssClass="w-100"
                                                  RenderStyle="ButtonRenderStyle.Secondary"
                                                  Click="OnCancelHandler"
                                                  Text="Cancel"/>
                                    </DxFormLayoutItem>
                                </DxFormLayoutGroup>
                            </DxFormLayout>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@

@code { 
    [Parameter]
    public TankScale TankScale { get; set; }

    private NH3Tank? _currentTank;
    private bool _isReadOnly = true;

    protected override Task OnInitializedAsync() {
        this._currentTank = this.TankScale.CurrentTank;
        return base.OnInitializedAsync();
    }

    private async Task AddNewTank() {
        
    }

    private async Task ClearTank() {
        
    }

    private async Task StartConsuming() {
        
    }

    private async Task OnSubmitHandler() {
        
    }

    private async Task OnCancelHandler() {
        
    }
}