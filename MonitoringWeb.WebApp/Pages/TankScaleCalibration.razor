@page "/scalecal"
@using MonitoringSystem.Shared.Data.LogModel
@using MonitoringWeb.WebApp.Components.TankScales
@using MonitoringSystem.Shared.Services
@using MonitoringWeb.WebApp.Services
@inject ValueChanged<TankScale> TankScaleChanged
@inject AmmoniaDataService AmmoniaDataService
@inject AmmoniaController AmmoniaController
@inject WebsiteConfigurationProvider Provider
@implements IAsyncDisposable

<div class="row d-flex justify-content-center">
    @foreach (var scale in this._scales) {
        <div class="col-3 shadow-lg p-3 mb-5 rounded" style="padding:1rem">
            <TS_StatusCard TankScale="@scale" OnClick="@this.TankScaleClickHandler"/>
        </div>
    }
</div>
<div class="container-lg">
    @if (this._selectedTankScale == null) {
        <h3>No Tank Selected</h3>
    } else {
        <ScaleView TankScale="@this._selectedTankScale"/>
    }
</div>

@*<div class="cw-480">
    <DxAccordion @ref="@this._accordion"
                 SelectionMode="NavigationSelectionMode.Single"
                 AnimationType="LayoutAnimationType.Slide">
        <Items>
            @foreach (var scale in this._scales) {
                <DxAccordionItem>
                    <HeaderTextTemplate>
                        <TS_StatusCard TankScale="@scale"/>
                    </HeaderTextTemplate>
                    <ContentTemplate>
                        <div class="container-sm py-1" style="height: 800px;width: 800px">
                            <DxTabs>
                                <DxTabPage Text="Scale calibration">
                                    <ScaleView TankScale="@scale"></ScaleView>
                                </DxTabPage>
                                <DxTabPage Text="Tank">
                                    
                                </DxTabPage>
                            </DxTabs>
                        </div>
                    </ContentTemplate>
                </DxAccordionItem>
            }
        </Items>
    </DxAccordion>
</div>*@


@code {
    private int _tabIndex;
    private DxAccordion _accordion;
    private TankScale? _selectedTankScale;
    private List<TankScale> _scales = new List<TankScale>();
    
  
    protected async override Task OnInitializedAsync() {
    /*this.TankScaleChanged.OnChildChanged += this.TankScaleChangedHandler;*/
        this._scales = await this.AmmoniaDataService.GetTankScales();
    }

    private Task TankScaleClickHandler(int tankScale) {
        this._selectedTankScale=this._scales.FirstOrDefault(e => e.ScaleId == tankScale);
        return Task.CompletedTask;
    }

    /*private async Task TankScaleChangedHandler() {
        this._scales = await this.AmmoniaDataService.GetTankScales();
        await InvokeAsync(StateHasChanged);
    }*/
    
    void SelectionChanged(AccordionSelectionChangedEventArgs args) {
        if(args.SelectedItems.Any()) {
            /*SelectedItem = (FinancialProductInfo)args.SelectedItems.FirstOrDefault().DataItem;
            DetailsPopupVisible = true;*/
        } else {
            //SelectedItem = null;
        }
            
    }
    


    public ValueTask DisposeAsync() {
        //this.TankScaleChanged.OnChildChanged -= this.TankScaleChangedHandler;
        return ValueTask.CompletedTask;
    }
}