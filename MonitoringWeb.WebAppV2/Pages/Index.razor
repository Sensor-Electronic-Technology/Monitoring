@page "/"
@using MonitoringWeb.WebAppV2.Components
@using MonitoringWeb.WebAppV2.Data
@using MonitoringSystem.Shared.SignalR
@using MonitoringWeb.WebAppV2.Data
@using MonitoringSystem.Shared.Data
@using Append.Blazor.Sidepanel
@inject SettingsService SettingsService

<div class="row">
    @foreach (var status in this._statusList) {
        <StatusCard DeviceStatus="@status"/>
    }
</div>
<div class="row">
    @if (this._devices == null) {
        <h4>Loading Devices, Please Wait..</h4>
    } else {
        <div class="row profile-row" style="padding:1rem">
            @foreach (var device in this._devices) {
                <div class="col-6 shadow-lg p-3 mb-5 rounded" style="padding:1rem">
                    <LiveGrid Hub="@device.HubAddress" DeviceName="@device.DeviceName" OnAlert="@OnAlertUpdate"/>
                </div>
            }
        </div>
    }
</div>

@code {
    IEnumerable<ManagedDevice>? _devices;
    List<DeviceStatus> _statusList=new List<DeviceStatus>();
    protected override async Task OnInitializedAsync() {
        await this.SettingsService.Load();
        this._devices = await this.SettingsService.GetDevices();
        foreach (var device in this._devices) {
            this._statusList.Add(new DeviceStatus() {
                DeviceName=device.DeviceName,
                Status = ActionType.Alarm
            });
        }
    }
    async Task OnAlertUpdate(DeviceStatus status) {
        var deviceStatus=this._statusList.FirstOrDefault(e => e.DeviceName == status.DeviceName);
        if (deviceStatus != null) {
            deviceStatus.Status=status.Status;
            deviceStatus.ActiveAlerts = status.ActiveAlerts;
            await InvokeAsync(StateHasChanged);
        }
    }

    async Task Update() {
        await InvokeAsync(StateHasChanged);
    }
}