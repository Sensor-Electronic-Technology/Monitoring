@page "/"
@using DevExpress.Blazor
@using DevExpress.Blazor.Configuration
@using MonitoringData.Infrastructure.Services.DataAccess
@using System.Drawing
@using Microsoft.Extensions.Options
@using MonitoringWeb.WebAppV2.Data
@inject LatestAlertService AlarmService
@inject PlotDataService PlotService

<h2 class="pb-2">Facility Monitoring Dashboard</h2>

<h2>Latest Alerts, Timespan=7days</h2>

@if (this.Data == null) {
    <h3>@Message</h3>
} else {
    <div class="row">
        
    </div>
    <DxGrid Data="@Data"
            ShowGroupPanel="true"
            AutoExpandAllGroupRows="true"
            PageSize="10"
            PagerPosition="GridPagerPosition.Bottom"
            PageSizeSelectorVisible="true"
            PageSizeSelectorItems="@(new int[] { 5, 10, 20, 30 })"
            PageSizeSelectorAllRowsItemVisible="true"
            PagerSwitchToInputBoxButtonCount="10"
            PagerVisibleNumericButtonCount="10">
        <Columns>
            <DxGridDataColumn FieldName="TimeStamp" DisplayFormat="G"/>
            <DxGridDataColumn FieldName="Device" GroupIndex="0"  />
            <DxGridDataColumn FieldName="Name"  />
            <DxGridDataColumn FieldName="State"  />
            <DxGridDataColumn FieldName="Value"  />
        </Columns>
    </DxGrid>
    <div class="row" style="padding:1rem">
        <DxButton Click="@FetchAlertPlot" RenderStyle="ButtonRenderStyle.Primary" 
                  RenderStyleMode="ButtonRenderStyleMode.Contained" 
                  Text="Fetch Plot" />
    </div>
}

@code{
    IEnumerable<AlertDto>? Data { get; set; }
    AlertDto? SelectedAlert { get; set; }
    string Message { get; set; } = "Data loading...";

    protected override async Task OnInitializedAsync() {
        this.Data=await this.AlarmService.GetLatestAlarms();
        if (this.Data==null) {
            this.Message = "No Recent Alerts";
        }
    }

    public async void FetchAlertPlot() {
        if (this.SelectedAlert != null) {
            //this.PlotService.GetData()
        }
    }
}